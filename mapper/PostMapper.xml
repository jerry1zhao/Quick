<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pers.jerry.quick.post.dao.PostDao">
    <resultMap type="Post" id="postsResult">
        <id column="id" property="id"/>
        <result column="createdate" property="createDate"/>
        <result column="title" property="title"/>
        <result column="subject" property="subject"/>
        <result column="postimage" property="postImage"/>
        <result column="description" property="description"/>
        <result column="tags" property="tags"/>
        <result column="status" property="status"/>
        <result column="htmlcontent" property="htmlContent"/>
        <result column="markdowncontent" property="markdownContent"/>

        <association property="createUser" column="createUser" javaType="User" jdbcType="INTEGER" resultMap="userResult" />
    </resultMap>

	<resultMap type="PostLike" id="postsLikeResult">
        <id column="id" property="id"/>
        <result column="postId" property="postId"/>
        <result column="likeDate" property="likeDate"/>
        <result column="isLike" property="isLike"/>

        <association property="likeUser" column="likeUser" javaType="User" jdbcType="INTEGER" resultMap="userResult" />
    </resultMap>
    
    <resultMap type="User" id="userResult">
        <id column="u_id" property="id"/>
        <result column="u_name" property="name"/>
        <result column="u_photo" property="photo"/>
    </resultMap>
    
    <select id="getPosts" resultMap="postsResult">
        SELECT P.ID AS "id",
        P.CREATEUSER AS "createUser",
        P.CREATEDATE AS "createDate",
        P.SUBJECT AS "subject",
        P.TITLE AS "title",
        P.DESCRIPTION AS "description",
        P.POSTIMAGE AS "postImage",
        P.STATUS AS "status",
        U.ID AS "u_id",
        U.NAME AS "u_name",
        U.PHOTO AS "u_photo"
        FROM JERRY_POST P
        LEFT JOIN JERRY_USER U ON P.CREATEUSER = U.ID
        ORDER BY P.CREATEDATE DESC
        LIMIT 5 OFFSET 0
    </select>

    <select id="searchPosts" parameterType="map" resultMap="postsResult">
        SELECT P.ID AS "id",
        P.CREATEUSER AS "createUser",
        P.CREATEDATE AS "createDate",
        P.SUBJECT AS "subject",
        P.TITLE AS "title",
        P.DESCRIPTION AS "description",
        P.POSTIMAGE AS "postImage",
        P.STATUS AS "status",
        U.ID AS "u_id",
        U.NAME AS "u_name",
        U.PHOTO AS "u_photo"
        FROM JERRY_POST P
        LEFT JOIN JERRY_USER U ON P.CREATEUSER = U.ID
        WHERE P.TITLE LIKE #{postTitle}
        ORDER BY P.CREATEDATE DESC
        LIMIT 5 OFFSET #{beginNum}
    </select>


    <select id="getPostsPage" parameterType="Integer" resultMap="postsResult">
        SELECT P.ID AS "id",
        P.CREATEUSER AS "createUser",
        P.CREATEDATE AS "createDate",
        P.SUBJECT AS "subject",
        P.TITLE AS "title",
        P.DESCRIPTION AS "description",
        P.POSTIMAGE AS "postImage",
        P.STATUS AS "status",
        U.ID AS "u_id",
        U.NAME AS "u_name",
        U.PHOTO AS "u_photo"
        FROM JERRY_POST P
        LEFT JOIN JERRY_USER U ON P.CREATEUSER = U.ID
        ORDER BY P.CREATEDATE DESC
        LIMIT 5 OFFSET #{beginNum}
    </select>

    <select id="getPost" parameterType="Integer" resultMap="postsResult">
        SELECT P.ID AS "id",
        P.CREATEUSER AS "createUser",
        P.CREATEDATE AS "createDate",
        P.SUBJECT AS "subject",
        P.TITLE AS "title",
        P.DESCRIPTION AS "description",
        P.HTMLCONTENT AS "htmlContent",
        P.MARKDOWNCONTENT AS "markdownCONTENT",
        P.TAGS AS "tags",
        P.POSTIMAGE AS "postImage",
        P.STATUS AS "status",
        U.ID AS "u_id",
        U.NAME AS "u_name",
        U.PHOTO AS "u_photo"
        FROM JERRY_POST P
        LEFT JOIN JERRY_USER U ON P.CREATEUSER = U.ID
        WHERE P.ID = #{id}
    </select>

    <select id="getUserPosts" parameterType="map" resultMap="postsResult">
        SELECT P.ID AS "id",
        P.CREATEUSER AS "createUser",
        P.CREATEDATE AS "createDate",
        P.SUBJECT AS "subject",
        P.TITLE AS "title",
        P.DESCRIPTION AS "description",
        P.POSTIMAGE AS "postImage",
        P.STATUS AS "status",
        U.ID AS "u_id",
        U.NAME AS "u_name",
        U.PHOTO AS "u_photo"
        FROM JERRY_POST P
        LEFT JOIN JERRY_USER U ON P.CREATEUSER = U.ID
        WHERE U.ID = #{userId}
        ORDER BY P.CREATEDATE DESC
        LIMIT 5 OFFSET #{beginNum}
    </select>

    <!--sum(case is_like when true then 1 else 0 end ) as "likeCount" -->
    <select id="hotPosts" resultType="map">
        SELECT PL.POSTID AS "postId",
        COUNT(1) AS "likeCount"
        FROM JERRY_POST_LIKE PL
        GROUP BY PL.POSTID
        ORDER BY "likeCount" DESC
        LIMIT 5
    </select>
    
    <select id="getPostLike" parameterType="map" resultMap="postsLikeResult">
        SELECT PL.ID AS "id",
        PL.POSTID AS "postId",
        PL.LIKE_DATE AS "likeDate",
        PL.IS_LIKE AS "isLike",
        U.ID AS "u_id",
        U.NAME AS "u_name",
        U.PHOTO AS "u_photo"
        FROM JERRY_POST_LIKE PL
        LEFT JOIN JERRY_USER U ON PL.LIKE_USER = U.ID
        WHERE PL.LIKE_USER = #{userId}
        AND PL.POSTID = #{postId}
    </select>
    
    <update id="likeOrDisLikePost" parameterType="map">
    	UPDATE JERRY_POST_LIKE
		SET IS_LIKE = #{like}
		WHERE POSTID = #{postId}
		AND LIKE_USER = #{userId}
    </update>

    <insert id="savePost" parameterType="Post" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO JERRY_POST (CREATEDATE, CREATEUSER, TITLE, SUBJECT, DESCRIPTION, TAGS, POSTIMAGE, STATUS, HTMLCONTENT, MARKDOWNCONTENT)
        VALUES (#{createDate}, #{createUser.id}, #{title}, #{subject}, #{description}, #{tags}, #{postImage}, #{status}, #{htmlContent}, #{markdownContent})
    </insert>
    
    <insert id="likePost" parameterType="PostLike" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO JERRY_POST_LIKE (POSTID, LIKE_DATE, LIKE_USER, IS_LIKE)
        VALUES (#{postId}, #{likeDate}, #{likeUser.id}, #{isLike})
    </insert>
    
</mapper>
